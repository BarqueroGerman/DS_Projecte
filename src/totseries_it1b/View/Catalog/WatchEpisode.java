/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package totseries_it1b.View.Catalog;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import totseries_it1b.Controller.TSController;

/**
 *
 * @author enric
 */
public class WatchEpisode extends javax.swing.JPanel {

    private String idSerie;
    private int numSeason;
    private int numEp;

    /**
     * Creates new form WatchEpisode
     */
    public WatchEpisode() {
        initComponents();
        timer = new Timer(50, new progress());
    }

    public void updateEpisode(String id, String titleSerie, int numSeason, int numEp, String titleEp, String desc) {
        this.idSerie = id;
        this.numSeason = numSeason;
        this.numEp = numEp;
        panelStars1.reset();
        episodeTitle.setText(titleEp);
        panelStars1.load(idSerie, numSeason, numEp);
        episodeDescription.setText(desc);
        progress.setValue(0);
        rateEpisodeLabel.setVisible(false);
        TSController ctrl = TSController.getInstance();
        if (ctrl.userIsAdmin()) {
            watchEpisode.setVisible(false);
            progress.setVisible(false);
            panelStars1.setVisible(true);
            rateEpisodeLabel.setVisible(true);
        } else if (!ctrl.userIsClient()) {
            watchEpisode.setVisible(false);
            progress.setVisible(false);
        }
    }

    public class progress implements ActionListener {

        public void actionPerformed(ActionEvent evt) {
            int n = progress.getValue();
            if (n < 100) {
                n++;
                progress.setValue(n);
            } else {
                timer.stop();
                int viewId = TSController.getInstance().visualizeEpisode(idSerie, numSeason, numEp);
                panelStars1.setViewId(viewId);
                JOptionPane.showMessageDialog(null, "The episode finished!");
                panelStars1.setVisible(true);
                rateEpisodeLabel.setVisible(true);
                progress.setValue(0);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        episodeDescription = new javax.swing.JTextPane();
        watchEpisode = new javax.swing.JButton();
        progress = new javax.swing.JProgressBar();
        panelStars1 = new totseries_it1b.View.BasicPanels.StarsPanel();
        rateEpisodeLabel = new javax.swing.JLabel();
        episodeTitle = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(913, 324));

        episodeDescription.setEditable(false);

        watchEpisode.setText("WATCH");
        watchEpisode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                watchEpisodeActionPerformed(evt);
            }
        });

        progress.setMinimumSize(new java.awt.Dimension(146, 17));
        progress.setStringPainted(true);

        rateEpisodeLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        rateEpisodeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rateEpisodeLabel.setText("RATE EPISODE:");

        episodeTitle.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        episodeTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        episodeTitle.setText("EPISODE TITLE");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(203, 203, 203)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(episodeDescription, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 558, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(watchEpisode, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(progress, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(139, 139, 139)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(panelStars1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(rateEpisodeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(152, 152, 152))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(episodeTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(episodeTitle)
                .addGap(18, 18, 18)
                .addComponent(episodeDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rateEpisodeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(watchEpisode, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panelStars1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(progress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(97, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void watchEpisodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_watchEpisodeActionPerformed
        timer.start();
    }//GEN-LAST:event_watchEpisodeActionPerformed

    private Timer timer;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane episodeDescription;
    private javax.swing.JLabel episodeTitle;
    private totseries_it1b.View.BasicPanels.StarsPanel panelStars1;
    private javax.swing.JProgressBar progress;
    private javax.swing.JLabel rateEpisodeLabel;
    private javax.swing.JButton watchEpisode;
    // End of variables declaration//GEN-END:variables

}
